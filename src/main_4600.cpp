// Autogenerated from CppSourceCreator
// Created by Sc2ad nice
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DifferenceRule
#include "PlayFab/MultiplayerModels/DifferenceRule.hpp"
// Including type: PlayFab.MultiplayerModels.QueueRuleAttribute
#include "PlayFab/MultiplayerModels/QueueRuleAttribute.hpp"
// Including type: PlayFab.MultiplayerModels.CustomDifferenceRuleExpansion
#include "PlayFab/MultiplayerModels/CustomDifferenceRuleExpansion.hpp"
// Including type: PlayFab.MultiplayerModels.LinearDifferenceRuleExpansion
#include "PlayFab/MultiplayerModels/LinearDifferenceRuleExpansion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.QueueRuleAttribute Attribute
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::QueueRuleAttribute*& PlayFab::MultiplayerModels::DifferenceRule::dyn_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_Attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attribute"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::QueueRuleAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.AttributeNotSpecifiedBehavior AttributeNotSpecifiedBehavior
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior& PlayFab::MultiplayerModels::DifferenceRule::dyn_AttributeNotSpecifiedBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_AttributeNotSpecifiedBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AttributeNotSpecifiedBehavior"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.CustomDifferenceRuleExpansion CustomExpansion
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::CustomDifferenceRuleExpansion*& PlayFab::MultiplayerModels::DifferenceRule::dyn_CustomExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_CustomExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomExpansion"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::CustomDifferenceRuleExpansion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Double> DefaultAttributeValue
[[deprecated("Use field access instead!")]] ::System::Nullable_1<double>& PlayFab::MultiplayerModels::DifferenceRule::dyn_DefaultAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_DefaultAttributeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DefaultAttributeValue"))->offset;
  return *reinterpret_cast<::System::Nullable_1<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Difference
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::DifferenceRule::dyn_Difference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_Difference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Difference"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.LinearDifferenceRuleExpansion LinearExpansion
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::LinearDifferenceRuleExpansion*& PlayFab::MultiplayerModels::DifferenceRule::dyn_LinearExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_LinearExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LinearExpansion"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::LinearDifferenceRuleExpansion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.AttributeMergeFunction MergeFunction
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::AttributeMergeFunction& PlayFab::MultiplayerModels::DifferenceRule::dyn_MergeFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_MergeFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MergeFunction"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::AttributeMergeFunction*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::DifferenceRule::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.UInt32> SecondsUntilOptional
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint>& PlayFab::MultiplayerModels::DifferenceRule::dyn_SecondsUntilOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_SecondsUntilOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsUntilOptional"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Weight
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::DifferenceRule::dyn_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DifferenceRule::dyn_Weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Weight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DynamicStandbySettings
#include "PlayFab/MultiplayerModels/DynamicStandbySettings.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.DynamicStandbyThreshold
#include "PlayFab/MultiplayerModels/DynamicStandbyThreshold.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.DynamicStandbyThreshold> DynamicFloorMultiplierThresholds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::DynamicStandbyThreshold*>*& PlayFab::MultiplayerModels::DynamicStandbySettings::dyn_DynamicFloorMultiplierThresholds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DynamicStandbySettings::dyn_DynamicFloorMultiplierThresholds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DynamicFloorMultiplierThresholds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::DynamicStandbyThreshold*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean IsEnabled
[[deprecated("Use field access instead!")]] bool& PlayFab::MultiplayerModels::DynamicStandbySettings::dyn_IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DynamicStandbySettings::dyn_IsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> RampDownSeconds
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::MultiplayerModels::DynamicStandbySettings::dyn_RampDownSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DynamicStandbySettings::dyn_RampDownSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RampDownSeconds"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.DynamicStandbyThreshold
#include "PlayFab/MultiplayerModels/DynamicStandbyThreshold.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double Multiplier
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::DynamicStandbyThreshold::dyn_Multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DynamicStandbyThreshold::dyn_Multiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Multiplier"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double TriggerThresholdPercentage
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::DynamicStandbyThreshold::dyn_TriggerThresholdPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::DynamicStandbyThreshold::dyn_TriggerThresholdPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TriggerThresholdPercentage"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.EmptyResponse
#include "PlayFab/MultiplayerModels/EmptyResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.EnableMultiplayerServersForTitleRequest
#include "PlayFab/MultiplayerModels/EnableMultiplayerServersForTitleRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.EnableMultiplayerServersForTitleResponse
#include "PlayFab/MultiplayerModels/EnableMultiplayerServersForTitleResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.TitleMultiplayerServerEnabledStatus> Status
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::TitleMultiplayerServerEnabledStatus>& PlayFab::MultiplayerModels::EnableMultiplayerServersForTitleResponse::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::EnableMultiplayerServersForTitleResponse::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::TitleMultiplayerServerEnabledStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.EntityKey
#include "PlayFab/MultiplayerModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Id
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::EntityKey::dyn_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::EntityKey::dyn_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Type
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::EntityKey::dyn_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::EntityKey::dyn_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Type"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GameCertificateReference
#include "PlayFab/MultiplayerModels/GameCertificateReference.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String GsdkAlias
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GameCertificateReference::dyn_GsdkAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GameCertificateReference::dyn_GsdkAlias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GsdkAlias"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GameCertificateReference::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GameCertificateReference::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GameCertificateReferenceParams
#include "PlayFab/MultiplayerModels/GameCertificateReferenceParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String GsdkAlias
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GameCertificateReferenceParams::dyn_GsdkAlias() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GameCertificateReferenceParams::dyn_GsdkAlias");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GsdkAlias"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GameCertificateReferenceParams::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GameCertificateReferenceParams::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetAssetUploadUrlRequest
#include "PlayFab/MultiplayerModels/GetAssetUploadUrlRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String FileName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetAssetUploadUrlRequest::dyn_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetAssetUploadUrlRequest::dyn_FileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetAssetUploadUrlResponse
#include "PlayFab/MultiplayerModels/GetAssetUploadUrlResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AssetUploadUrl
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetAssetUploadUrlResponse::dyn_AssetUploadUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetAssetUploadUrlResponse::dyn_AssetUploadUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetUploadUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FileName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetAssetUploadUrlResponse::dyn_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetAssetUploadUrlResponse::dyn_FileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FileName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetBuildAliasRequest
#include "PlayFab/MultiplayerModels/GetBuildAliasRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String AliasId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetBuildAliasRequest::dyn_AliasId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildAliasRequest::dyn_AliasId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AliasId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetBuildRequest
#include "PlayFab/MultiplayerModels/GetBuildRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetBuildRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetBuildResponse
#include "PlayFab/MultiplayerModels/GetBuildResponse.hpp"
// Including type: PlayFab.MultiplayerModels.ContainerImageReference
#include "PlayFab/MultiplayerModels/ContainerImageReference.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.AssetReference
#include "PlayFab/MultiplayerModels/AssetReference.hpp"
// Including type: PlayFab.MultiplayerModels.GameCertificateReference
#include "PlayFab/MultiplayerModels/GameCertificateReference.hpp"
// Including type: PlayFab.MultiplayerModels.InstrumentationConfiguration
#include "PlayFab/MultiplayerModels/InstrumentationConfiguration.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: PlayFab.MultiplayerModels.Port
#include "PlayFab/MultiplayerModels/Port.hpp"
// Including type: PlayFab.MultiplayerModels.BuildRegion
#include "PlayFab/MultiplayerModels/BuildRegion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetBuildResponse::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String BuildName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetBuildResponse::dyn_BuildName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_BuildName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String BuildStatus
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetBuildResponse::dyn_BuildStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_BuildStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildStatus"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.ContainerFlavor> ContainerFlavor
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>& PlayFab::MultiplayerModels::GetBuildResponse::dyn_ContainerFlavor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_ContainerFlavor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContainerFlavor"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::ContainerFlavor>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ContainerRunCommand
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetBuildResponse::dyn_ContainerRunCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_ContainerRunCommand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContainerRunCommand"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> CreationTime
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::MultiplayerModels::GetBuildResponse::dyn_CreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_CreationTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CreationTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.ContainerImageReference CustomGameContainerImage
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::ContainerImageReference*& PlayFab::MultiplayerModels::GetBuildResponse::dyn_CustomGameContainerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_CustomGameContainerImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomGameContainerImage"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::ContainerImageReference**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.AssetReference> GameAssetReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReference*>*& PlayFab::MultiplayerModels::GetBuildResponse::dyn_GameAssetReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_GameAssetReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameAssetReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetReference*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.GameCertificateReference> GameCertificateReferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReference*>*& PlayFab::MultiplayerModels::GetBuildResponse::dyn_GameCertificateReferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_GameCertificateReferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GameCertificateReferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::GameCertificateReference*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.InstrumentationConfiguration InstrumentationConfiguration
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::InstrumentationConfiguration*& PlayFab::MultiplayerModels::GetBuildResponse::dyn_InstrumentationConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_InstrumentationConfiguration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InstrumentationConfiguration"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::InstrumentationConfiguration**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> Metadata
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& PlayFab::MultiplayerModels::GetBuildResponse::dyn_Metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_Metadata");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Metadata"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MultiplayerServerCountPerVm
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::GetBuildResponse::dyn_MultiplayerServerCountPerVm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_MultiplayerServerCountPerVm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerServerCountPerVm"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String OsPlatform
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetBuildResponse::dyn_OsPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_OsPlatform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OsPlatform"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.Port> Ports
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>*& PlayFab::MultiplayerModels::GetBuildResponse::dyn_Ports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_Ports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ports"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildRegion> RegionConfigurations
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegion*>*& PlayFab::MultiplayerModels::GetBuildResponse::dyn_RegionConfigurations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_RegionConfigurations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionConfigurations"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildRegion*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ServerType
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetBuildResponse::dyn_ServerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_ServerType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String StartMultiplayerServerCommand
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetBuildResponse::dyn_StartMultiplayerServerCommand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_StartMultiplayerServerCommand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StartMultiplayerServerCommand"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.AzureVmSize> VmSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>& PlayFab::MultiplayerModels::GetBuildResponse::dyn_VmSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetBuildResponse::dyn_VmSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::AzureVmSize>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetContainerRegistryCredentialsRequest
#include "PlayFab/MultiplayerModels/GetContainerRegistryCredentialsRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetContainerRegistryCredentialsResponse
#include "PlayFab/MultiplayerModels/GetContainerRegistryCredentialsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String DnsName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetContainerRegistryCredentialsResponse::dyn_DnsName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetContainerRegistryCredentialsResponse::dyn_DnsName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DnsName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Password
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetContainerRegistryCredentialsResponse::dyn_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetContainerRegistryCredentialsResponse::dyn_Password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Username
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetContainerRegistryCredentialsResponse::dyn_Username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetContainerRegistryCredentialsResponse::dyn_Username");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Username"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMatchmakingQueueRequest
#include "PlayFab/MultiplayerModels/GetMatchmakingQueueRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchmakingQueueRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingQueueRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMatchmakingQueueResult
#include "PlayFab/MultiplayerModels/GetMatchmakingQueueResult.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingQueueConfig
#include "PlayFab/MultiplayerModels/MatchmakingQueueConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.MatchmakingQueueConfig MatchmakingQueue
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::MatchmakingQueueConfig*& PlayFab::MultiplayerModels::GetMatchmakingQueueResult::dyn_MatchmakingQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingQueueResult::dyn_MatchmakingQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchmakingQueue"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::MatchmakingQueueConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/GetMatchmakingTicketRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EscapeObject
[[deprecated("Use field access instead!")]] bool& PlayFab::MultiplayerModels::GetMatchmakingTicketRequest::dyn_EscapeObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketRequest::dyn_EscapeObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EscapeObject"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchmakingTicketRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TicketId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchmakingTicketRequest::dyn_TicketId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketRequest::dyn_TicketId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/GetMatchmakingTicketResult.hpp"
// Including type: PlayFab.MultiplayerModels.EntityKey
#include "PlayFab/MultiplayerModels/EntityKey.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayer
#include "PlayFab/MultiplayerModels/MatchmakingPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String CancellationReasonString
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_CancellationReasonString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_CancellationReasonString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CancellationReasonString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime Created
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_Created");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Created"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.EntityKey Creator
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::EntityKey*& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_Creator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_Creator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Creator"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GiveUpAfterSeconds
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_GiveUpAfterSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_GiveUpAfterSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GiveUpAfterSeconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MatchId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_MatchId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_MatchId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchmakingPlayer> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayer*>*& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.EntityKey> MembersToMatchWith
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::EntityKey*>*& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_MembersToMatchWith() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_MembersToMatchWith");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MembersToMatchWith"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::EntityKey*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Status
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TicketId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_TicketId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchmakingTicketResult::dyn_TicketId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMatchRequest
#include "PlayFab/MultiplayerModels/GetMatchRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EscapeObject
[[deprecated("Use field access instead!")]] bool& PlayFab::MultiplayerModels::GetMatchRequest::dyn_EscapeObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchRequest::dyn_EscapeObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EscapeObject"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MatchId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchRequest::dyn_MatchId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchRequest::dyn_MatchId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ReturnMemberAttributes
[[deprecated("Use field access instead!")]] bool& PlayFab::MultiplayerModels::GetMatchRequest::dyn_ReturnMemberAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchRequest::dyn_ReturnMemberAttributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ReturnMemberAttributes"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMatchResult
#include "PlayFab/MultiplayerModels/GetMatchResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayerWithTeamAssignment
#include "PlayFab/MultiplayerModels/MatchmakingPlayerWithTeamAssignment.hpp"
// Including type: PlayFab.MultiplayerModels.ServerDetails
#include "PlayFab/MultiplayerModels/ServerDetails.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String MatchId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMatchResult::dyn_MatchId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchResult::dyn_MatchId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchmakingPlayerWithTeamAssignment> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment*>*& PlayFab::MultiplayerModels::GetMatchResult::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchResult::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> RegionPreferences
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::MultiplayerModels::GetMatchResult::dyn_RegionPreferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchResult::dyn_RegionPreferences");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionPreferences"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.ServerDetails ServerDetails
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::ServerDetails*& PlayFab::MultiplayerModels::GetMatchResult::dyn_ServerDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMatchResult::dyn_ServerDetails");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerDetails"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::ServerDetails**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerDetailsRequest
#include "PlayFab/MultiplayerModels/GetMultiplayerServerDetailsRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsRequest::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsRequest::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SessionId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsRequest::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsRequest::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerDetailsResponse
#include "PlayFab/MultiplayerModels/GetMultiplayerServerDetailsResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.ConnectedPlayer
#include "PlayFab/MultiplayerModels/ConnectedPlayer.hpp"
// Including type: PlayFab.MultiplayerModels.Port
#include "PlayFab/MultiplayerModels/Port.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.ConnectedPlayer> ConnectedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::ConnectedPlayer*>*& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_ConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_ConnectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::ConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FQDN
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_FQDN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_FQDN");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FQDN"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String IPV4Address
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_IPV4Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_IPV4Address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IPV4Address"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> LastStateTransitionTime
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_LastStateTransitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_LastStateTransitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastStateTransitionTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.Port> Ports
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>*& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_Ports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_Ports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ports"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ServerId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_ServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_ServerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SessionId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String State
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_State");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "State"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VmId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_VmId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerDetailsResponse::dyn_VmId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerLogsRequest
#include "PlayFab/MultiplayerModels/GetMultiplayerServerLogsRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ServerId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerLogsRequest::dyn_ServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerLogsRequest::dyn_ServerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMultiplayerServerLogsResponse
#include "PlayFab/MultiplayerModels/GetMultiplayerServerLogsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String LogDownloadUrl
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerServerLogsResponse::dyn_LogDownloadUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerServerLogsResponse::dyn_LogDownloadUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LogDownloadUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetMultiplayerSessionLogsBySessionIdRequest
#include "PlayFab/MultiplayerModels/GetMultiplayerSessionLogsBySessionIdRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String SessionId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetMultiplayerSessionLogsBySessionIdRequest::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetMultiplayerSessionLogsBySessionIdRequest::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetQueueStatisticsRequest
#include "PlayFab/MultiplayerModels/GetQueueStatisticsRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetQueueStatisticsRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetQueueStatisticsRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetQueueStatisticsResult
#include "PlayFab/MultiplayerModels/GetQueueStatisticsResult.hpp"
// Including type: PlayFab.MultiplayerModels.Statistics
#include "PlayFab/MultiplayerModels/Statistics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.UInt32> NumberOfPlayersMatching
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint>& PlayFab::MultiplayerModels::GetQueueStatisticsResult::dyn_NumberOfPlayersMatching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetQueueStatisticsResult::dyn_NumberOfPlayersMatching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NumberOfPlayersMatching"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.Statistics TimeToMatchStatisticsInSeconds
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::Statistics*& PlayFab::MultiplayerModels::GetQueueStatisticsResult::dyn_TimeToMatchStatisticsInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetQueueStatisticsResult::dyn_TimeToMatchStatisticsInSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TimeToMatchStatisticsInSeconds"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::Statistics**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetRemoteLoginEndpointRequest
#include "PlayFab/MultiplayerModels/GetRemoteLoginEndpointRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetRemoteLoginEndpointRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetRemoteLoginEndpointRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetRemoteLoginEndpointRequest::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetRemoteLoginEndpointRequest::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VmId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetRemoteLoginEndpointRequest::dyn_VmId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetRemoteLoginEndpointRequest::dyn_VmId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetRemoteLoginEndpointResponse
#include "PlayFab/MultiplayerModels/GetRemoteLoginEndpointResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String IPV4Address
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse::dyn_IPV4Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse::dyn_IPV4Address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IPV4Address"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Port
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse::dyn_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetRemoteLoginEndpointResponse::dyn_Port");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Port"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetServerBackfillTicketRequest
#include "PlayFab/MultiplayerModels/GetServerBackfillTicketRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean EscapeObject
[[deprecated("Use field access instead!")]] bool& PlayFab::MultiplayerModels::GetServerBackfillTicketRequest::dyn_EscapeObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketRequest::dyn_EscapeObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EscapeObject"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetServerBackfillTicketRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TicketId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetServerBackfillTicketRequest::dyn_TicketId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketRequest::dyn_TicketId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetServerBackfillTicketResult
#include "PlayFab/MultiplayerModels/GetServerBackfillTicketResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayerWithTeamAssignment
#include "PlayFab/MultiplayerModels/MatchmakingPlayerWithTeamAssignment.hpp"
// Including type: PlayFab.MultiplayerModels.ServerDetails
#include "PlayFab/MultiplayerModels/ServerDetails.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String CancellationReasonString
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_CancellationReasonString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_CancellationReasonString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CancellationReasonString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime Created
[[deprecated("Use field access instead!")]] ::System::DateTime& PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_Created() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_Created");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Created"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 GiveUpAfterSeconds
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_GiveUpAfterSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_GiveUpAfterSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "GiveUpAfterSeconds"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String MatchId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_MatchId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_MatchId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchmakingPlayerWithTeamAssignment> Members
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment*>*& PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_Members() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_Members");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Members"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.ServerDetails ServerDetails
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::ServerDetails*& PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_ServerDetails() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_ServerDetails");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerDetails"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::ServerDetails**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Status
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TicketId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_TicketId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetServerBackfillTicketResult::dyn_TicketId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetTitleEnabledForMultiplayerServersStatusRequest
#include "PlayFab/MultiplayerModels/GetTitleEnabledForMultiplayerServersStatusRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetTitleEnabledForMultiplayerServersStatusResponse
#include "PlayFab/MultiplayerModels/GetTitleEnabledForMultiplayerServersStatusResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<PlayFab.MultiplayerModels.TitleMultiplayerServerEnabledStatus> Status
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::PlayFab::MultiplayerModels::TitleMultiplayerServerEnabledStatus>& PlayFab::MultiplayerModels::GetTitleEnabledForMultiplayerServersStatusResponse::dyn_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetTitleEnabledForMultiplayerServersStatusResponse::dyn_Status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Status"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::PlayFab::MultiplayerModels::TitleMultiplayerServerEnabledStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetTitleMultiplayerServersQuotasRequest
#include "PlayFab/MultiplayerModels/GetTitleMultiplayerServersQuotasRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.GetTitleMultiplayerServersQuotasResponse
#include "PlayFab/MultiplayerModels/GetTitleMultiplayerServersQuotasResponse.hpp"
// Including type: PlayFab.MultiplayerModels.TitleMultiplayerServersQuotas
#include "PlayFab/MultiplayerModels/TitleMultiplayerServersQuotas.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.TitleMultiplayerServersQuotas Quotas
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::TitleMultiplayerServersQuotas*& PlayFab::MultiplayerModels::GetTitleMultiplayerServersQuotasResponse::dyn_Quotas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::GetTitleMultiplayerServersQuotasResponse::dyn_Quotas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Quotas"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::TitleMultiplayerServersQuotas**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.InstrumentationConfiguration
#include "PlayFab/MultiplayerModels/InstrumentationConfiguration.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> ProcessesToMonitor
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::MultiplayerModels::InstrumentationConfiguration::dyn_ProcessesToMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::InstrumentationConfiguration::dyn_ProcessesToMonitor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ProcessesToMonitor"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.JoinMatchmakingTicketRequest
#include "PlayFab/MultiplayerModels/JoinMatchmakingTicketRequest.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayer
#include "PlayFab/MultiplayerModels/MatchmakingPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.MatchmakingPlayer Member
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::MatchmakingPlayer*& PlayFab::MultiplayerModels::JoinMatchmakingTicketRequest::dyn_Member() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::JoinMatchmakingTicketRequest::dyn_Member");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Member"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::MatchmakingPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::JoinMatchmakingTicketRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::JoinMatchmakingTicketRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TicketId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::JoinMatchmakingTicketRequest::dyn_TicketId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::JoinMatchmakingTicketRequest::dyn_TicketId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.JoinMatchmakingTicketResult
#include "PlayFab/MultiplayerModels/JoinMatchmakingTicketResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.LinearDifferenceRuleExpansion
#include "PlayFab/MultiplayerModels/LinearDifferenceRuleExpansion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double Delta
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::LinearDifferenceRuleExpansion::dyn_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearDifferenceRuleExpansion::dyn_Delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delta"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Double> Limit
[[deprecated("Use field access instead!")]] ::System::Nullable_1<double>& PlayFab::MultiplayerModels::LinearDifferenceRuleExpansion::dyn_Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearDifferenceRuleExpansion::dyn_Limit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Limit"))->offset;
  return *reinterpret_cast<::System::Nullable_1<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::LinearDifferenceRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearDifferenceRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.LinearRegionSelectionRuleExpansion
#include "PlayFab/MultiplayerModels/LinearRegionSelectionRuleExpansion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Delta
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion::dyn_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion::dyn_Delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delta"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Limit
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion::dyn_Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion::dyn_Limit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Limit"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.LinearSetIntersectionRuleExpansion
#include "PlayFab/MultiplayerModels/LinearSetIntersectionRuleExpansion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Delta
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::LinearSetIntersectionRuleExpansion::dyn_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearSetIntersectionRuleExpansion::dyn_Delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delta"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::LinearSetIntersectionRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearSetIntersectionRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.LinearTeamDifferenceRuleExpansion
#include "PlayFab/MultiplayerModels/LinearTeamDifferenceRuleExpansion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double Delta
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::LinearTeamDifferenceRuleExpansion::dyn_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearTeamDifferenceRuleExpansion::dyn_Delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delta"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Double> Limit
[[deprecated("Use field access instead!")]] ::System::Nullable_1<double>& PlayFab::MultiplayerModels::LinearTeamDifferenceRuleExpansion::dyn_Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearTeamDifferenceRuleExpansion::dyn_Limit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Limit"))->offset;
  return *reinterpret_cast<::System::Nullable_1<double>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::LinearTeamDifferenceRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearTeamDifferenceRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.LinearTeamSizeBalanceRuleExpansion
#include "PlayFab/MultiplayerModels/LinearTeamSizeBalanceRuleExpansion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Delta
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::LinearTeamSizeBalanceRuleExpansion::dyn_Delta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearTeamSizeBalanceRuleExpansion::dyn_Delta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Delta"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.UInt32> Limit
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint>& PlayFab::MultiplayerModels::LinearTeamSizeBalanceRuleExpansion::dyn_Limit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearTeamSizeBalanceRuleExpansion::dyn_Limit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Limit"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::LinearTeamSizeBalanceRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::LinearTeamSizeBalanceRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListAssetSummariesRequest
#include "PlayFab/MultiplayerModels/ListAssetSummariesRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> PageSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::MultiplayerModels::ListAssetSummariesRequest::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListAssetSummariesRequest::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListAssetSummariesRequest::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListAssetSummariesRequest::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListAssetSummariesResponse
#include "PlayFab/MultiplayerModels/ListAssetSummariesResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.AssetSummary
#include "PlayFab/MultiplayerModels/AssetSummary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.AssetSummary> AssetSummaries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetSummary*>*& PlayFab::MultiplayerModels::ListAssetSummariesResponse::dyn_AssetSummaries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListAssetSummariesResponse::dyn_AssetSummaries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AssetSummaries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::AssetSummary*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ListAssetSummariesResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListAssetSummariesResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListAssetSummariesResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListAssetSummariesResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListBuildAliasesForTitleResponse
#include "PlayFab/MultiplayerModels/ListBuildAliasesForTitleResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.BuildAliasDetailsResponse
#include "PlayFab/MultiplayerModels/BuildAliasDetailsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildAliasDetailsResponse> BuildAliases
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildAliasDetailsResponse*>*& PlayFab::MultiplayerModels::ListBuildAliasesForTitleResponse::dyn_BuildAliases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListBuildAliasesForTitleResponse::dyn_BuildAliases");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildAliases"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildAliasDetailsResponse*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListBuildSummariesRequest
#include "PlayFab/MultiplayerModels/ListBuildSummariesRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> PageSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::MultiplayerModels::ListBuildSummariesRequest::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListBuildSummariesRequest::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListBuildSummariesRequest::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListBuildSummariesRequest::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListBuildSummariesResponse
#include "PlayFab/MultiplayerModels/ListBuildSummariesResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.BuildSummary
#include "PlayFab/MultiplayerModels/BuildSummary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.BuildSummary> BuildSummaries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildSummary*>*& PlayFab::MultiplayerModels::ListBuildSummariesResponse::dyn_BuildSummaries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListBuildSummariesResponse::dyn_BuildSummaries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildSummaries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::BuildSummary*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ListBuildSummariesResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListBuildSummariesResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListBuildSummariesResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListBuildSummariesResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListCertificateSummariesRequest
#include "PlayFab/MultiplayerModels/ListCertificateSummariesRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> PageSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::MultiplayerModels::ListCertificateSummariesRequest::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListCertificateSummariesRequest::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListCertificateSummariesRequest::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListCertificateSummariesRequest::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListCertificateSummariesResponse
#include "PlayFab/MultiplayerModels/ListCertificateSummariesResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.CertificateSummary
#include "PlayFab/MultiplayerModels/CertificateSummary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.CertificateSummary> CertificateSummaries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::CertificateSummary*>*& PlayFab::MultiplayerModels::ListCertificateSummariesResponse::dyn_CertificateSummaries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListCertificateSummariesResponse::dyn_CertificateSummaries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CertificateSummaries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::CertificateSummary*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ListCertificateSummariesResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListCertificateSummariesResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListCertificateSummariesResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListCertificateSummariesResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListContainerImagesRequest
#include "PlayFab/MultiplayerModels/ListContainerImagesRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> PageSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::MultiplayerModels::ListContainerImagesRequest::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListContainerImagesRequest::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListContainerImagesRequest::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListContainerImagesRequest::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListContainerImagesResponse
#include "PlayFab/MultiplayerModels/ListContainerImagesResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> Images
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::MultiplayerModels::ListContainerImagesResponse::dyn_Images() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListContainerImagesResponse::dyn_Images");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Images"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ListContainerImagesResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListContainerImagesResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListContainerImagesResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListContainerImagesResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListContainerImageTagsRequest
#include "PlayFab/MultiplayerModels/ListContainerImageTagsRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String ImageName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListContainerImageTagsRequest::dyn_ImageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListContainerImageTagsRequest::dyn_ImageName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ImageName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListContainerImageTagsResponse
#include "PlayFab/MultiplayerModels/ListContainerImageTagsResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> Tags
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::MultiplayerModels::ListContainerImageTagsResponse::dyn_Tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListContainerImageTagsResponse::dyn_Tags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Tags"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListMatchmakingQueuesRequest
#include "PlayFab/MultiplayerModels/ListMatchmakingQueuesRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListMatchmakingQueuesResult
#include "PlayFab/MultiplayerModels/ListMatchmakingQueuesResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingQueueConfig
#include "PlayFab/MultiplayerModels/MatchmakingQueueConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchmakingQueueConfig> MatchMakingQueues
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingQueueConfig*>*& PlayFab::MultiplayerModels::ListMatchmakingQueuesResult::dyn_MatchMakingQueues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMatchmakingQueuesResult::dyn_MatchMakingQueues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchMakingQueues"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingQueueConfig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListMatchmakingTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/ListMatchmakingTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EntityKey
#include "PlayFab/MultiplayerModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::EntityKey*& PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListMatchmakingTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/ListMatchmakingTicketsForPlayerResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> TicketIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerResult::dyn_TicketIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMatchmakingTicketsForPlayerResult::dyn_TicketIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListMultiplayerServersRequest
#include "PlayFab/MultiplayerModels/ListMultiplayerServersRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListMultiplayerServersRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMultiplayerServersRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> PageSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::MultiplayerModels::ListMultiplayerServersRequest::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMultiplayerServersRequest::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListMultiplayerServersRequest::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMultiplayerServersRequest::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListMultiplayerServersRequest::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMultiplayerServersRequest::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListMultiplayerServersResponse
#include "PlayFab/MultiplayerModels/ListMultiplayerServersResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.MultiplayerServerSummary
#include "PlayFab/MultiplayerModels/MultiplayerServerSummary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MultiplayerServerSummary> MultiplayerServerSummaries
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MultiplayerServerSummary*>*& PlayFab::MultiplayerModels::ListMultiplayerServersResponse::dyn_MultiplayerServerSummaries() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMultiplayerServersResponse::dyn_MultiplayerServerSummaries");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MultiplayerServerSummaries"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MultiplayerServerSummary*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ListMultiplayerServersResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMultiplayerServersResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListMultiplayerServersResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListMultiplayerServersResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListPartyQosServersRequest
#include "PlayFab/MultiplayerModels/ListPartyQosServersRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Version
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListPartyQosServersRequest::dyn_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListPartyQosServersRequest::dyn_Version");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Version"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListPartyQosServersResponse
#include "PlayFab/MultiplayerModels/ListPartyQosServersResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.QosServer
#include "PlayFab/MultiplayerModels/QosServer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ListPartyQosServersResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListPartyQosServersResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.QosServer> QosServers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::QosServer*>*& PlayFab::MultiplayerModels::ListPartyQosServersResponse::dyn_QosServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListPartyQosServersResponse::dyn_QosServers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QosServers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::QosServer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListPartyQosServersResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListPartyQosServersResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListQosServersForTitleRequest
#include "PlayFab/MultiplayerModels/ListQosServersForTitleRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListQosServersForTitleResponse
#include "PlayFab/MultiplayerModels/ListQosServersForTitleResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.QosServer
#include "PlayFab/MultiplayerModels/QosServer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ListQosServersForTitleResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListQosServersForTitleResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.QosServer> QosServers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::QosServer*>*& PlayFab::MultiplayerModels::ListQosServersForTitleResponse::dyn_QosServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListQosServersForTitleResponse::dyn_QosServers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QosServers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::QosServer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListQosServersForTitleResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListQosServersForTitleResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListQosServersRequest
#include "PlayFab/MultiplayerModels/ListQosServersRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListQosServersResponse
#include "PlayFab/MultiplayerModels/ListQosServersResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.QosServer
#include "PlayFab/MultiplayerModels/QosServer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ListQosServersResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListQosServersResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.QosServer> QosServers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::QosServer*>*& PlayFab::MultiplayerModels::ListQosServersResponse::dyn_QosServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListQosServersResponse::dyn_QosServers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QosServers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::QosServer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListQosServersResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListQosServersResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListServerBackfillTicketsForPlayerRequest
#include "PlayFab/MultiplayerModels/ListServerBackfillTicketsForPlayerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.EntityKey
#include "PlayFab/MultiplayerModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::EntityKey*& PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerRequest::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerRequest::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListServerBackfillTicketsForPlayerResult
#include "PlayFab/MultiplayerModels/ListServerBackfillTicketsForPlayerResult.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> TicketIds
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerResult::dyn_TicketIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListServerBackfillTicketsForPlayerResult::dyn_TicketIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TicketIds"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListVirtualMachineSummariesRequest
#include "PlayFab/MultiplayerModels/ListVirtualMachineSummariesRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.Int32> PageSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<int>& PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListVirtualMachineSummariesRequest::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ListVirtualMachineSummariesResponse
#include "PlayFab/MultiplayerModels/ListVirtualMachineSummariesResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.VirtualMachineSummary
#include "PlayFab/MultiplayerModels/VirtualMachineSummary.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 PageSize
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ListVirtualMachineSummariesResponse::dyn_PageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListVirtualMachineSummariesResponse::dyn_PageSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PageSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SkipToken
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ListVirtualMachineSummariesResponse::dyn_SkipToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListVirtualMachineSummariesResponse::dyn_SkipToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SkipToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.VirtualMachineSummary> VirtualMachines
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::VirtualMachineSummary*>*& PlayFab::MultiplayerModels::ListVirtualMachineSummariesResponse::dyn_VirtualMachines() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ListVirtualMachineSummariesResponse::dyn_VirtualMachines");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VirtualMachines"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::VirtualMachineSummary*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayer
#include "PlayFab/MultiplayerModels/MatchmakingPlayer.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayerAttributes
#include "PlayFab/MultiplayerModels/MatchmakingPlayerAttributes.hpp"
// Including type: PlayFab.MultiplayerModels.EntityKey
#include "PlayFab/MultiplayerModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.MatchmakingPlayerAttributes Attributes
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::MatchmakingPlayerAttributes*& PlayFab::MultiplayerModels::MatchmakingPlayer::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingPlayer::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::MatchmakingPlayerAttributes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::EntityKey*& PlayFab::MultiplayerModels::MatchmakingPlayer::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingPlayer::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayerAttributes
#include "PlayFab/MultiplayerModels/MatchmakingPlayerAttributes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Object DataObject
[[deprecated("Use field access instead!")]] ::Il2CppObject*& PlayFab::MultiplayerModels::MatchmakingPlayerAttributes::dyn_DataObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingPlayerAttributes::dyn_DataObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DataObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String EscapedDataObject
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MatchmakingPlayerAttributes::dyn_EscapedDataObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingPlayerAttributes::dyn_EscapedDataObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EscapedDataObject"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayerWithTeamAssignment
#include "PlayFab/MultiplayerModels/MatchmakingPlayerWithTeamAssignment.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingPlayerAttributes
#include "PlayFab/MultiplayerModels/MatchmakingPlayerAttributes.hpp"
// Including type: PlayFab.MultiplayerModels.EntityKey
#include "PlayFab/MultiplayerModels/EntityKey.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.MatchmakingPlayerAttributes Attributes
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::MatchmakingPlayerAttributes*& PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment::dyn_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment::dyn_Attributes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attributes"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::MatchmakingPlayerAttributes**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.EntityKey Entity
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::EntityKey*& PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment::dyn_Entity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment::dyn_Entity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Entity"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::EntityKey**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String TeamId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment::dyn_TeamId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingPlayerWithTeamAssignment::dyn_TeamId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeamId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.MatchmakingQueueConfig
#include "PlayFab/MultiplayerModels/MatchmakingQueueConfig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.DifferenceRule
#include "PlayFab/MultiplayerModels/DifferenceRule.hpp"
// Including type: PlayFab.MultiplayerModels.MatchTotalRule
#include "PlayFab/MultiplayerModels/MatchTotalRule.hpp"
// Including type: PlayFab.MultiplayerModels.RegionSelectionRule
#include "PlayFab/MultiplayerModels/RegionSelectionRule.hpp"
// Including type: PlayFab.MultiplayerModels.SetIntersectionRule
#include "PlayFab/MultiplayerModels/SetIntersectionRule.hpp"
// Including type: PlayFab.MultiplayerModels.StatisticsVisibilityToPlayers
#include "PlayFab/MultiplayerModels/StatisticsVisibilityToPlayers.hpp"
// Including type: PlayFab.MultiplayerModels.StringEqualityRule
#include "PlayFab/MultiplayerModels/StringEqualityRule.hpp"
// Including type: PlayFab.MultiplayerModels.TeamDifferenceRule
#include "PlayFab/MultiplayerModels/TeamDifferenceRule.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingQueueTeam
#include "PlayFab/MultiplayerModels/MatchmakingQueueTeam.hpp"
// Including type: PlayFab.MultiplayerModels.TeamSizeBalanceRule
#include "PlayFab/MultiplayerModels/TeamSizeBalanceRule.hpp"
// Including type: PlayFab.MultiplayerModels.TeamTicketSizeSimilarityRule
#include "PlayFab/MultiplayerModels/TeamTicketSizeSimilarityRule.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.DifferenceRule> DifferenceRules
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::DifferenceRule*>*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_DifferenceRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_DifferenceRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DifferenceRules"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::DifferenceRule*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchTotalRule> MatchTotalRules
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchTotalRule*>*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_MatchTotalRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_MatchTotalRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchTotalRules"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchTotalRule*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 MaxMatchSize
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_MaxMatchSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_MaxMatchSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxMatchSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.UInt32> MaxTicketSize
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint>& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_MaxTicketSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_MaxTicketSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxTicketSize"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 MinMatchSize
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_MinMatchSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_MinMatchSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinMatchSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.RegionSelectionRule RegionSelectionRule
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::RegionSelectionRule*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_RegionSelectionRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_RegionSelectionRule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RegionSelectionRule"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::RegionSelectionRule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ServerAllocationEnabled
[[deprecated("Use field access instead!")]] bool& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_ServerAllocationEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_ServerAllocationEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerAllocationEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.SetIntersectionRule> SetIntersectionRules
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::SetIntersectionRule*>*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_SetIntersectionRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_SetIntersectionRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SetIntersectionRules"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::SetIntersectionRule*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.StatisticsVisibilityToPlayers StatisticsVisibilityToPlayers
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::StatisticsVisibilityToPlayers*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_StatisticsVisibilityToPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_StatisticsVisibilityToPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StatisticsVisibilityToPlayers"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::StatisticsVisibilityToPlayers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.StringEqualityRule> StringEqualityRules
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::StringEqualityRule*>*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_StringEqualityRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_StringEqualityRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StringEqualityRules"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::StringEqualityRule*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.TeamDifferenceRule> TeamDifferenceRules
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::TeamDifferenceRule*>*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_TeamDifferenceRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_TeamDifferenceRules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeamDifferenceRules"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::TeamDifferenceRule*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.MatchmakingQueueTeam> Teams
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingQueueTeam*>*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_Teams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_Teams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Teams"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::MatchmakingQueueTeam*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.TeamSizeBalanceRule TeamSizeBalanceRule
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::TeamSizeBalanceRule*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_TeamSizeBalanceRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_TeamSizeBalanceRule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeamSizeBalanceRule"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::TeamSizeBalanceRule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.TeamTicketSizeSimilarityRule TeamTicketSizeSimilarityRule
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::TeamTicketSizeSimilarityRule*& PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_TeamTicketSizeSimilarityRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueConfig::dyn_TeamTicketSizeSimilarityRule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "TeamTicketSizeSimilarityRule"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::TeamTicketSizeSimilarityRule**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.MatchmakingQueueTeam
#include "PlayFab/MultiplayerModels/MatchmakingQueueTeam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 MaxTeamSize
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::MatchmakingQueueTeam::dyn_MaxTeamSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueTeam::dyn_MaxTeamSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxTeamSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 MinTeamSize
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::MatchmakingQueueTeam::dyn_MinTeamSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueTeam::dyn_MinTeamSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinTeamSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MatchmakingQueueTeam::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchmakingQueueTeam::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.MatchTotalRule
#include "PlayFab/MultiplayerModels/MatchTotalRule.hpp"
// Including type: PlayFab.MultiplayerModels.QueueRuleAttribute
#include "PlayFab/MultiplayerModels/QueueRuleAttribute.hpp"
// Including type: PlayFab.MultiplayerModels.MatchTotalRuleExpansion
#include "PlayFab/MultiplayerModels/MatchTotalRuleExpansion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.QueueRuleAttribute Attribute
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::QueueRuleAttribute*& PlayFab::MultiplayerModels::MatchTotalRule::dyn_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRule::dyn_Attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attribute"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::QueueRuleAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.MatchTotalRuleExpansion Expansion
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::MatchTotalRuleExpansion*& PlayFab::MultiplayerModels::MatchTotalRule::dyn_Expansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRule::dyn_Expansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Expansion"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::MatchTotalRuleExpansion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Max
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::MatchTotalRule::dyn_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRule::dyn_Max");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Max"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Min
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::MatchTotalRule::dyn_Min() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRule::dyn_Min");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Min"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MatchTotalRule::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRule::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.UInt32> SecondsUntilOptional
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint>& PlayFab::MultiplayerModels::MatchTotalRule::dyn_SecondsUntilOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRule::dyn_SecondsUntilOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsUntilOptional"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Weight
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::MatchTotalRule::dyn_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRule::dyn_Weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Weight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.MatchTotalRuleExpansion
#include "PlayFab/MultiplayerModels/MatchTotalRuleExpansion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.OverrideDouble
#include "PlayFab/MultiplayerModels/OverrideDouble.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.OverrideDouble> MaxOverrides
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideDouble*>*& PlayFab::MultiplayerModels::MatchTotalRuleExpansion::dyn_MaxOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRuleExpansion::dyn_MaxOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxOverrides"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideDouble*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.OverrideDouble> MinOverrides
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideDouble*>*& PlayFab::MultiplayerModels::MatchTotalRuleExpansion::dyn_MinOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRuleExpansion::dyn_MinOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinOverrides"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::OverrideDouble*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 SecondsBetweenExpansions
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::MatchTotalRuleExpansion::dyn_SecondsBetweenExpansions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MatchTotalRuleExpansion::dyn_SecondsBetweenExpansions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsBetweenExpansions"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.MultiplayerEmptyRequest
#include "PlayFab/MultiplayerModels/MultiplayerEmptyRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.MultiplayerServerSummary
#include "PlayFab/MultiplayerModels/MultiplayerServerSummary.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.ConnectedPlayer
#include "PlayFab/MultiplayerModels/ConnectedPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.ConnectedPlayer> ConnectedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::ConnectedPlayer*>*& PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_ConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_ConnectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::ConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> LastStateTransitionTime
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_LastStateTransitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_LastStateTransitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastStateTransitionTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ServerId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_ServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_ServerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SessionId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String State
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_State");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "State"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VmId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_VmId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::MultiplayerServerSummary::dyn_VmId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.OsPlatform
#include "PlayFab/MultiplayerModels/OsPlatform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.OsPlatform Windows
::PlayFab::MultiplayerModels::OsPlatform PlayFab::MultiplayerModels::OsPlatform::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::OsPlatform::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::OsPlatform>("PlayFab.MultiplayerModels", "OsPlatform", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.OsPlatform Windows
void PlayFab::MultiplayerModels::OsPlatform::_set_Windows(::PlayFab::MultiplayerModels::OsPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::OsPlatform::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "OsPlatform", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.OsPlatform Linux
::PlayFab::MultiplayerModels::OsPlatform PlayFab::MultiplayerModels::OsPlatform::_get_Linux() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::OsPlatform::_get_Linux");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::OsPlatform>("PlayFab.MultiplayerModels", "OsPlatform", "Linux"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.OsPlatform Linux
void PlayFab::MultiplayerModels::OsPlatform::_set_Linux(::PlayFab::MultiplayerModels::OsPlatform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::OsPlatform::_set_Linux");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "OsPlatform", "Linux", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::OsPlatform::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::OsPlatform::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.OverrideDouble
#include "PlayFab/MultiplayerModels/OverrideDouble.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Double Value
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::OverrideDouble::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::OverrideDouble::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.OverrideUnsignedInt
#include "PlayFab/MultiplayerModels/OverrideUnsignedInt.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 Value
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::OverrideUnsignedInt::dyn_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::OverrideUnsignedInt::dyn_Value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Value"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.Port
#include "PlayFab/MultiplayerModels/Port.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::Port::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::Port::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Num
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::Port::dyn_Num() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::Port::dyn_Num");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Num"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.ProtocolType Protocol
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::ProtocolType& PlayFab::MultiplayerModels::Port::dyn_Protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::Port::dyn_Protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Protocol"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::ProtocolType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ProtocolType
#include "PlayFab/MultiplayerModels/ProtocolType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.ProtocolType TCP
::PlayFab::MultiplayerModels::ProtocolType PlayFab::MultiplayerModels::ProtocolType::_get_TCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ProtocolType::_get_TCP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::ProtocolType>("PlayFab.MultiplayerModels", "ProtocolType", "TCP"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.ProtocolType TCP
void PlayFab::MultiplayerModels::ProtocolType::_set_TCP(::PlayFab::MultiplayerModels::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ProtocolType::_set_TCP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "ProtocolType", "TCP", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.ProtocolType UDP
::PlayFab::MultiplayerModels::ProtocolType PlayFab::MultiplayerModels::ProtocolType::_get_UDP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ProtocolType::_get_UDP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::ProtocolType>("PlayFab.MultiplayerModels", "ProtocolType", "UDP"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.ProtocolType UDP
void PlayFab::MultiplayerModels::ProtocolType::_set_UDP(::PlayFab::MultiplayerModels::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ProtocolType::_set_UDP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "ProtocolType", "UDP", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ProtocolType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ProtocolType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.QosServer
#include "PlayFab/MultiplayerModels/QosServer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::QosServer::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::QosServer::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ServerUrl
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::QosServer::dyn_ServerUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::QosServer::dyn_ServerUrl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerUrl"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.QueueRuleAttribute
#include "PlayFab/MultiplayerModels/QueueRuleAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String Path
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::QueueRuleAttribute::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::QueueRuleAttribute::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.AttributeSource Source
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::AttributeSource& PlayFab::MultiplayerModels::QueueRuleAttribute::dyn_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::QueueRuleAttribute::dyn_Source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Source"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::AttributeSource*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.RegionSelectionRule
#include "PlayFab/MultiplayerModels/RegionSelectionRule.hpp"
// Including type: PlayFab.MultiplayerModels.CustomRegionSelectionRuleExpansion
#include "PlayFab/MultiplayerModels/CustomRegionSelectionRuleExpansion.hpp"
// Including type: PlayFab.MultiplayerModels.LinearRegionSelectionRuleExpansion
#include "PlayFab/MultiplayerModels/LinearRegionSelectionRuleExpansion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.CustomRegionSelectionRuleExpansion CustomExpansion
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::CustomRegionSelectionRuleExpansion*& PlayFab::MultiplayerModels::RegionSelectionRule::dyn_CustomExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RegionSelectionRule::dyn_CustomExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomExpansion"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::CustomRegionSelectionRuleExpansion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.LinearRegionSelectionRuleExpansion LinearExpansion
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion*& PlayFab::MultiplayerModels::RegionSelectionRule::dyn_LinearExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RegionSelectionRule::dyn_LinearExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LinearExpansion"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::LinearRegionSelectionRuleExpansion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 MaxLatency
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::RegionSelectionRule::dyn_MaxLatency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RegionSelectionRule::dyn_MaxLatency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxLatency"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RegionSelectionRule::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RegionSelectionRule::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Path
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RegionSelectionRule::dyn_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RegionSelectionRule::dyn_Path");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Path"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.UInt32> SecondsUntilOptional
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint>& PlayFab::MultiplayerModels::RegionSelectionRule::dyn_SecondsUntilOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RegionSelectionRule::dyn_SecondsUntilOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsUntilOptional"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Weight
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::RegionSelectionRule::dyn_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RegionSelectionRule::dyn_Weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Weight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.RemoveMatchmakingQueueRequest
#include "PlayFab/MultiplayerModels/RemoveMatchmakingQueueRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String QueueName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RemoveMatchmakingQueueRequest::dyn_QueueName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RemoveMatchmakingQueueRequest::dyn_QueueName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "QueueName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.RemoveMatchmakingQueueResult
#include "PlayFab/MultiplayerModels/RemoveMatchmakingQueueResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.RequestMultiplayerServerRequest
#include "PlayFab/MultiplayerModels/RequestMultiplayerServerRequest.hpp"
// Including type: PlayFab.MultiplayerModels.BuildAliasParams
#include "PlayFab/MultiplayerModels/BuildAliasParams.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.BuildAliasParams BuildAliasParams
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::BuildAliasParams*& PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_BuildAliasParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_BuildAliasParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildAliasParams"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::BuildAliasParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String BuildId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_BuildId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_BuildId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BuildId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> InitialPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_InitialPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_InitialPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InitialPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> PreferredRegions
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_PreferredRegions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_PreferredRegions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PreferredRegions"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SessionCookie
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_SessionCookie() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_SessionCookie");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionCookie"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SessionId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerRequest::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.RequestMultiplayerServerResponse
#include "PlayFab/MultiplayerModels/RequestMultiplayerServerResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.ConnectedPlayer
#include "PlayFab/MultiplayerModels/ConnectedPlayer.hpp"
// Including type: PlayFab.MultiplayerModels.Port
#include "PlayFab/MultiplayerModels/Port.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.ConnectedPlayer> ConnectedPlayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::ConnectedPlayer*>*& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_ConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_ConnectedPlayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ConnectedPlayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::ConnectedPlayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String FQDN
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_FQDN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_FQDN");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FQDN"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String IPV4Address
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_IPV4Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_IPV4Address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IPV4Address"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.DateTime> LastStateTransitionTime
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::System::DateTime>& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_LastStateTransitionTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_LastStateTransitionTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LastStateTransitionTime"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::System::DateTime>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.Port> Ports
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>*& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_Ports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_Ports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ports"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String ServerId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_ServerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_ServerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ServerId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String SessionId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_SessionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_SessionId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SessionId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String State
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_State");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "State"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String VmId
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_VmId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RequestMultiplayerServerResponse::dyn_VmId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VmId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.RolloverContainerRegistryCredentialsRequest
#include "PlayFab/MultiplayerModels/RolloverContainerRegistryCredentialsRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.RolloverContainerRegistryCredentialsResponse
#include "PlayFab/MultiplayerModels/RolloverContainerRegistryCredentialsResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String DnsName
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsResponse::dyn_DnsName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsResponse::dyn_DnsName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DnsName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Password
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsResponse::dyn_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsResponse::dyn_Password");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Password"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Username
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsResponse::dyn_Username() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::RolloverContainerRegistryCredentialsResponse::dyn_Username");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Username"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ServerDetails
#include "PlayFab/MultiplayerModels/ServerDetails.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.Port
#include "PlayFab/MultiplayerModels/Port.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String IPV4Address
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ServerDetails::dyn_IPV4Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ServerDetails::dyn_IPV4Address");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "IPV4Address"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.MultiplayerModels.Port> Ports
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>*& PlayFab::MultiplayerModels::ServerDetails::dyn_Ports() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ServerDetails::dyn_Ports");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Ports"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::MultiplayerModels::Port*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Region
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::ServerDetails::dyn_Region() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ServerDetails::dyn_Region");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Region"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.ServerType
#include "PlayFab/MultiplayerModels/ServerType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.ServerType Container
::PlayFab::MultiplayerModels::ServerType PlayFab::MultiplayerModels::ServerType::_get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ServerType::_get_Container");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::ServerType>("PlayFab.MultiplayerModels", "ServerType", "Container"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.ServerType Container
void PlayFab::MultiplayerModels::ServerType::_set_Container(::PlayFab::MultiplayerModels::ServerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ServerType::_set_Container");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "ServerType", "Container", value));
}
// Autogenerated static field getter
// Get static field: static public PlayFab.MultiplayerModels.ServerType Process
::PlayFab::MultiplayerModels::ServerType PlayFab::MultiplayerModels::ServerType::_get_Process() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ServerType::_get_Process");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::PlayFab::MultiplayerModels::ServerType>("PlayFab.MultiplayerModels", "ServerType", "Process"));
}
// Autogenerated static field setter
// Set static field: static public PlayFab.MultiplayerModels.ServerType Process
void PlayFab::MultiplayerModels::ServerType::_set_Process(::PlayFab::MultiplayerModels::ServerType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ServerType::_set_Process");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("PlayFab.MultiplayerModels", "ServerType", "Process", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& PlayFab::MultiplayerModels::ServerType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::ServerType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.SetIntersectionRule
#include "PlayFab/MultiplayerModels/SetIntersectionRule.hpp"
// Including type: PlayFab.MultiplayerModels.QueueRuleAttribute
#include "PlayFab/MultiplayerModels/QueueRuleAttribute.hpp"
// Including type: PlayFab.MultiplayerModels.CustomSetIntersectionRuleExpansion
#include "PlayFab/MultiplayerModels/CustomSetIntersectionRuleExpansion.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PlayFab.MultiplayerModels.LinearSetIntersectionRuleExpansion
#include "PlayFab/MultiplayerModels/LinearSetIntersectionRuleExpansion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.QueueRuleAttribute Attribute
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::QueueRuleAttribute*& PlayFab::MultiplayerModels::SetIntersectionRule::dyn_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetIntersectionRule::dyn_Attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Attribute"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::QueueRuleAttribute**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.AttributeNotSpecifiedBehavior AttributeNotSpecifiedBehavior
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior& PlayFab::MultiplayerModels::SetIntersectionRule::dyn_AttributeNotSpecifiedBehavior() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetIntersectionRule::dyn_AttributeNotSpecifiedBehavior");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AttributeNotSpecifiedBehavior"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::AttributeNotSpecifiedBehavior*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.CustomSetIntersectionRuleExpansion CustomExpansion
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::CustomSetIntersectionRuleExpansion*& PlayFab::MultiplayerModels::SetIntersectionRule::dyn_CustomExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetIntersectionRule::dyn_CustomExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CustomExpansion"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::CustomSetIntersectionRuleExpansion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<System.String> DefaultAttributeValue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& PlayFab::MultiplayerModels::SetIntersectionRule::dyn_DefaultAttributeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetIntersectionRule::dyn_DefaultAttributeValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "DefaultAttributeValue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.LinearSetIntersectionRuleExpansion LinearExpansion
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::LinearSetIntersectionRuleExpansion*& PlayFab::MultiplayerModels::SetIntersectionRule::dyn_LinearExpansion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetIntersectionRule::dyn_LinearExpansion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LinearExpansion"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::LinearSetIntersectionRuleExpansion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 MinIntersectionSize
[[deprecated("Use field access instead!")]] uint& PlayFab::MultiplayerModels::SetIntersectionRule::dyn_MinIntersectionSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetIntersectionRule::dyn_MinIntersectionSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinIntersectionSize"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String Name
[[deprecated("Use field access instead!")]] ::StringW& PlayFab::MultiplayerModels::SetIntersectionRule::dyn_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetIntersectionRule::dyn_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Nullable`1<System.UInt32> SecondsUntilOptional
[[deprecated("Use field access instead!")]] ::System::Nullable_1<uint>& PlayFab::MultiplayerModels::SetIntersectionRule::dyn_SecondsUntilOptional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetIntersectionRule::dyn_SecondsUntilOptional");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SecondsUntilOptional"))->offset;
  return *reinterpret_cast<::System::Nullable_1<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Double Weight
[[deprecated("Use field access instead!")]] double& PlayFab::MultiplayerModels::SetIntersectionRule::dyn_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetIntersectionRule::dyn_Weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Weight"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.SetMatchmakingQueueRequest
#include "PlayFab/MultiplayerModels/SetMatchmakingQueueRequest.hpp"
// Including type: PlayFab.MultiplayerModels.MatchmakingQueueConfig
#include "PlayFab/MultiplayerModels/MatchmakingQueueConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PlayFab.MultiplayerModels.MatchmakingQueueConfig MatchmakingQueue
[[deprecated("Use field access instead!")]] ::PlayFab::MultiplayerModels::MatchmakingQueueConfig*& PlayFab::MultiplayerModels::SetMatchmakingQueueRequest::dyn_MatchmakingQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::PlayFab::MultiplayerModels::SetMatchmakingQueueRequest::dyn_MatchmakingQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MatchmakingQueue"))->offset;
  return *reinterpret_cast<::PlayFab::MultiplayerModels::MatchmakingQueueConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayFab.MultiplayerModels.SetMatchmakingQueueResult
#include "PlayFab/MultiplayerModels/SetMatchmakingQueueResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
